SimpleSwitchMorph subclass: #LOCell	instanceVariableNames: 'mouseAction'	classVariableNames: ''	poolDictionaries: ''	category: 'PBE-LightsOut'!!LOCell methodsFor: 'accessing'!mouseAction: arg1	^ mouseAction := arg1! !!LOCell methodsFor: 'initialize'!intialize	| tmp2 tmp4 |	super initialize.	tmp2 := self.	tmp2		label: '';		borderWidth: 2.	bounds := 0 @ 0 corner: 16 @ 16.	offColor := Color paleYellow.	onColor := Color paleBlue darker.	tmp4 := self.	tmp4		useSquareCorners;		turnOff! !!LOCell methodsFor: 'initialize'!mouseUp: arg1	mouseAction value! !BorderedMorph subclass: #LOGame	instanceVariableNames: 'cells'	classVariableNames: ''	poolDictionaries: ''	category: 'PBE-LightsOut'!!LOGame methodsFor: 'game Logic'!toggleNeighboursOfCellAt: arg1 at: arg2	arg1 > 1		ifTrue: [ (cells at: arg1 - 1 at: arg2) toggleState ].	arg1 < self cellsPerSide		ifTrue: [ (cells at: arg1 + 1 at: arg2) toggleState ].	arg2 > 1		ifTrue: [ (cells at: arg1 at: arg2 - 1) toggleState ].	arg2 < self cellsPerSide		ifTrue: [ (cells at: arg1 at: arg2 + 1) toggleState ]! !!LOGame methodsFor: 'as yet unclassified'!cellsPerSide	^ 10! !!LOGame methodsFor: 'initialization'!initialize	| tmp1 tmp2 tmp3 tmp4 |	super initialize.	tmp4 := self cellsPerSide.	tmp1 := LOCell new.	tmp2 := tmp1 width.	tmp3 := tmp1 height.	self		bounds: (5 @ 5 extent: (tmp2 * tmp4) @ (tmp3 * tmp4) + (2 * self borderWidth)).	cells := Matrix		new: tmp4		tabulate: [ :arg1 :arg2 | self newCellAt: arg1 at: arg2 ]! !!LOGame methodsFor: 'instance creation'!newCellAt: arg1 at: arg2	| tmp1 tmp2 |	tmp1 := LOCell new.	tmp2 := self innerBounds origin.	self addMorph: tmp1.	tmp1		position: ((arg1 - 1) * tmp1 width) @ ((arg2 - 1) * tmp1 height) + tmp2;		mouseAction: [ self toggleNeighboursOfCellAt: arg1 at: arg2 ].	^ tmp1! !